<%#
# Form Partial

This partial is rendered on a resource's `new` and `edit` pages,
and renders all form fields for a resource's editable attributes.

## Local variables:

- `page`:
  An instance of [Administrate::Page::Form][1].
  Contains helper methods to display a form,
  and knows which attributes should be displayed in the resource's form.

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Form
%>

<%= form_for([namespace, page.resource], html: { class: "form" }) do |f| %>
  <% if page.resource.errors.any? %>
    <div id="error_explanation">
      <h2>
        <%= pluralize(page.resource.errors.count, "error") %>
        prohibited this <%= page.resource_name %> from being saved:
      </h2>

      <ul>
        <% page.resource.errors.full_messages.each do |message| %>
          <li class="flash-error"><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <% page.attributes.each do |attribute| -%>
    <div id="<%= attribute.attribute %>" class="field-unit field-unit--<%= attribute.html_class %>">
      <%= render_field attribute, f: f %>
    </div>
  <% end -%>

  <div class="form-actions">
    <%= f.submit %>
  </div>
<% end %>

<%
# HasMany - Pyramid Module by defauly shows "pyramid_module" in the Label. I couldn't find in Administrate gem's 
# documentation how to make a custom label for it (I tried to add to config/locales/en.yml a label, but it 
# does not apply for forms in New or Edit action)
# If you know how to do it without JS, please modify it, otherwise PLEASE DON'T DELETE THIS JS LINE. THANK YOU!
%>
<script>
  document.getElementById('pyramid_module').getElementsByClassName('field-unit__label')[0].children[0].innerHTML = 'Pyramid Modules';
</script>
