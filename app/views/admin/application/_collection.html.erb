<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<% if resources.first.respond_to?(:has_many_through_sort_scope) %>
  <% sort_model = resources.first.has_many_through_sort_scope %>
<% else %>
  <% sort_model = resources.first.class.name %>
<% end %>

<table
  class='table table-responsive'
  aria-labelledby="<%= table_title %>"
  data-sortable-parent-model-id="<%= params[:id] %>"
  data-sortable-model="<%= sort_model %>"
  data-resource-model="<%= resources.first.class.name %>"
  data-sortable-update-endpoint="/admin/sort"
  >
  <thead>
    <tr>
      <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
        <% custom_attr_name = attr_type.try(:options).try(:fetch, :order, attr_name) || attr_name %>

        <th class="cell-label
        cell-label--<%= attr_type.html_class %>
        cell-label--<%= collection_presenter.ordered_html_class(custom_attr_name) %>"
        scope="col"
        role="columnheader"
        aria-sort="<%= sort_order(collection_presenter.ordered_html_class(custom_attr_name)) %>">
          <% link_text = t(
            "helpers.label.#{resource_name}.#{attr_name}",
            default: attr_name.to_s,
          ).titleize %>
          <% if attr_type.try(:options).try(:fetch, :sortable, true) == false %>
            <%= link_text %>
          <% else %>
            <%= link_to(sanitized_order_params.merge(collection_presenter.order_params_for(custom_attr_name || attr_name))) do %>
              <%= link_text %>
              <% if collection_presenter.ordered_by?(custom_attr_name) %>
                <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(custom_attr_name) %>">
                  <svg aria-hidden="true">
                    <use xlink:href="#icon-up-caret" />
                  </svg>
                </span>
              <% end %>
            <% end %>
          <% end %>
        </th>
      <% end %>

      <% # override for the hmt join model, so we can display the position without edit or destroy %>
      <% unless resources.first.class.name == 'ExerciseWorkout' %>
        <% [valid_action?(:edit, collection_presenter.resource_name),
            valid_action?(:destroy, collection_presenter.resource_name)].count(true).times do %>
          <th scope="col"></th>
        <% end %>
      <% end %>
    </tr>
  </thead>

  <tbody id="<%= 'table_body_id' unless controller.controller_name == 'exercises' %>">
    <% resources.each do |resource| %>
      <tr class="js-table-row"
          tabindex="0"
          data-table-row-id="<%= resource.id %>"
          <% if valid_action? :show, collection_presenter.resource_name %>
            <%= %(role=link data-url=#{polymorphic_path([namespace, resource])}) %>
          <% end %>
          >
        <% collection_presenter.attributes_for(resource).each do |attribute| %>
          <td class="cell-data cell-data--<%= attribute.html_class %>">
            <a href="<%= polymorphic_path([namespace, resource]) -%>"
               class="action-show"
               >
              <%= render_field attribute %>
            </a>
          </td>
        <% end %>

        <% # override for the hmt join model, so we can display the position without edit or destroy %>
        <% unless resource.class.name == 'ExerciseWorkout' %>
          <% if valid_action? :edit, collection_presenter.resource_name %>
            <td><%= link_to(
              t("administrate.actions.edit"),
              [:edit, namespace, resource],
              class: "action-edit",
            ) %></td>
          <% end %>

          <% if valid_action? :destroy, collection_presenter.resource_name %>
            <td><%= link_to(
              t("administrate.actions.destroy"),
              [namespace, resource],
              class: "text-color-red",
              method: :delete,
              data: { confirm: t("administrate.actions.confirm") }
            ) %></td>
          <% end %>
        <% end %>
      </tr>
    <% end %>
  </tbody>
</table>
